{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"KyFromAbove Workshop Ky GIS Conference September 2025 Workshop Repo https://github.com/ianhorn/kyfromabove-gisconference2025-workshop Kentucky from Above on the AWS Open Data Registry Bio Name: Ian Horn Work - DGI or Commonwealth Office of Technology - Division of Geographic Information DGI Mandate - serve as a central clearinghouse for all spatial data in state government KYAPED - Kentucky Aerial Photography and Elevation Data Collect statewide data Make publicly available Create tools to access and use Intro Who are you? What are your interests? What brings you here today? Lingo Acronym Meaning KyFromAbove Kentucky From Above KYAPED Kentucky Aerial Photography and Elevation Data STAC SpatioTemporal Asset Catalog STAC-Browser web browser interface to explore a STAC API Disclaimer This workshop is created by an individual of the Commonweatlh Office of Technology - Division of Geographic Information. I am not a remote-sensing expert, nor do I claim to be. The information provided in the workshop is intended for informational and instructional purposes. Methods from the examples are not meant to be authoritative in nature, but just a guide for users to get started exploring the data.","title":"Home"},{"location":"#kyfromabove-workshop","text":"","title":"KyFromAbove Workshop"},{"location":"#ky-gis-conference-september-2025","text":"Workshop Repo https://github.com/ianhorn/kyfromabove-gisconference2025-workshop Kentucky from Above on the AWS Open Data Registry","title":"Ky GIS Conference September 2025"},{"location":"#bio","text":"Name: Ian Horn Work - DGI or Commonwealth Office of Technology - Division of Geographic Information DGI Mandate - serve as a central clearinghouse for all spatial data in state government KYAPED - Kentucky Aerial Photography and Elevation Data Collect statewide data Make publicly available Create tools to access and use","title":"Bio"},{"location":"#intro","text":"Who are you? What are your interests? What brings you here today?","title":"Intro"},{"location":"#lingo","text":"Acronym Meaning KyFromAbove Kentucky From Above KYAPED Kentucky Aerial Photography and Elevation Data STAC SpatioTemporal Asset Catalog STAC-Browser web browser interface to explore a STAC API","title":"Lingo"},{"location":"#disclaimer","text":"This workshop is created by an individual of the Commonweatlh Office of Technology - Division of Geographic Information. I am not a remote-sensing expert, nor do I claim to be. The information provided in the workshop is intended for informational and instructional purposes. Methods from the examples are not meant to be authoritative in nature, but just a guide for users to get started exploring the data.","title":"Disclaimer"},{"location":"contact/","text":"Ian Horn email: ian.horn@ky.gov Docker: ianhorn Github: ianhorn LinkedIn: Ian Horn DGI Email kyfromabove@ky.gov","title":"Contact"},{"location":"contact/#ian-horn","text":"email: ian.horn@ky.gov Docker: ianhorn Github: ianhorn LinkedIn: Ian Horn DGI Email kyfromabove@ky.gov","title":"Ian Horn"},{"location":"desktop-gis/arcgis-pro/","text":"Minimum Requirements: ArcGIS Pro 3.2 Use the STAC API in an ArcGIS Pro project. Open ArcGIS Click map Give you New Project a name Cloud Store A Cloud Store connection file is a method to crawl a cloud bucket/container like a regular folder. In some instances, these are required when connecting to STAC APIs. You can download a .ACS file from the AWS Explorer . To create your own, use the instructions below. In the Ribbon at the top, click on Insert, Connection, New Cloud Store Connection. Figure: Insert a New Cloud Storage Connection In the dialog create a name for the connection file, select AMAZON as the Service Provider, kyfromabove for the Bucket (Container) Name, and US WEST (Oregon) for the Region (Environment). For Provider options, add AWS_NO_SIGN_REQUEST with a value of yes. STAC Connection File To get starting exploring the STAC API, the first item you need to make sure you have is a STAC Connection In ribbon at the top, click Insert Click on Connections With your mouse, hover over the STAC Connection Select, create new collection. This gives us the Create STAC Connection dialog box. Figure: Create a new New STAC Connection . Connection Name: KyFromAbove-STAC Connection: https://spved5ihrl.execute-api.us-west-2.amazonaws.com Optionally, add the Cloud Storage Connection we created earlier. You should now have a Catalog Pane that looks like this with your cloud storage and stac connections. Save your project. Also, on your own machines, you may right click on the either of the connections and choose to save to favorites and add to new projects. Explore the STAC In the map, zoom to and area of interest. For this example, I have zoomed to the area in western Kentucky south of Woodman in Pike County, Kentucky. Figure: Area of Interest, coal mine south of Woodman. *X* marks the spot. Open Explore STAC Pane In the catalog pane, right click on the STAC Connection file we created in the above step, and click on the Explore STAC... . This will open a new pane. Feel free to move it around according to your preference. Figure: Explore STAC Panel. For this example, I will check the box for the dem-phase1. Then in the Extent option, I will choose Current Display Extent . This will modify the min and max xy values. Click on View Results at the bottom. Take a moment to explore the options on the Results tab for the Explore STAC pane. The ID:N126E433_2011_DEM_Phase1_cog.tif is known as the STAC Item ID. In the bottom of an Item's tab, click on the white icon in the middle of the three icons. This is the Properties Box. Take a minute to explore the Item properties. Figure: STAC Item Properties. 3. Click on the green icon to the left. This will drop a footprint onto your map. Very useful for knowing where the Item will draw on the map. 4. Finally, use the yellow add layer button to add to file to your map. Figure: Item card display in the results tab. You are now STREAMING a cloud-optimized geotiff straight from the cloud to your desktop application. Add Multiple Footprints You can now explore the STAC even further. You may need to zoom in closer or farther away, adjust the extent and refresh the results. I'm going to add four footprint (like a square) over the mining area. Figure: Footprints added to a map in ArcGIS Pro. Add a Mosaic Now check the boxes for the items you have as footprints in the map. The footprint icons subtely highlight. At the top of the pane, click on the add raster (blue/white) icon to choose from the menu. Select the Add as Mosaic Layer to Current Map . Figure: Four items selected and ready to be mosaicked and added to the map. It may take a few moments becauses Pro is pulling information from the cloud. Once that is complete, rendering will be much faster. For the record, I'm using tiles N126E443, N126E444, N127E443, amd N127E444. I now have four items seamlessly mosaicked in my map view. Explore the mosaic by zooming in and out. Figure: Four STAC items seamless mosaiced streaming Go ahead and right click the STAC mosaic layer and rename it by opening the properties dialog box. Call it DEM-Phase1 . (Don't forget to save the project occasionally). Let the fun begin. With the mosaic layer still selected in the Contents Panel, toggle open Imagery in the top ribbon. Search for Raster Functions and open. Type in the word Hillshade and click that icon. Figure: Raster Function Panel. Change Hillshade Type to Multidirectionl . Change Scaling to Adjusted . click Create New Layer With both mosaic layers turn on, select the newly created colorized Multidirection Hillshade raster in the contents pane. Click on Raster Layer tab in the top ribbon. Play with Transparency percentages. Play with Layer Blend option. Figure: Zoomed-in image of mine raster at 0% transparency and *Pin Light* used for blend mode. - Switch blend back to normal. Repeat the steps for the same Phase 3 DEM tiles. Once added to the map as a mosaic layer, rename raster to DEM-Phase3 . Toggle off any raster layers we added. Repeat steps to create another multidirectional hillshade raster. Analysis Change Detection For this section, we are going to perform a change detection analysis using the two mosaicked layers from different time periods. Like before, will used the mine South of Woodman, and just south of the Lower Elk Creek near North Hollow. X marks the spot. Figure: Coal mine south of Woodman, Kentucky. Click on the Imagery tab at the top, select the Change Detection icon and this will open the Change Detection Wizard pane. Configure the wizard Change Detection Method - Pixel Value Change From Raster - DEM-Phase1 To Raster - DEM-Phase3 Statistics and Histogram Computation - use default values Figure: Change Detection Wizard Panel. Click Next > Leave the Band Difference with default values. Click Next > On the next Change Detection Wizard page, the tool tells us we need to calculate statistics. Click on the bar chart icon in the top right hand corner to do so. Figure: Classify Difference page for the change detection wizard. Click on the statistics graph icon in top right corner. Uncheck *Classify the difference in values. Click Next > to move to Output Generation . Leave values as default and click Preview at the bottom. You should see something like this. Figure: Image Preview using the Change Detection Wizard. Green indicates a negative change while red indicates a positive change. Back in the wizard panel, rename output to ChangeDetection.tif . Click Run The result will be a raster with a linear scale of our values with darker showing decreases and white showing increases. Take a moment to play around with Raster Layer -> Layer Blend values. Output You should see something like this. Figure: Tiff output of Change Detection Wizard with 0% transparency and layer blend set to Vivid Light . This concludes the activity of playing around with a STAC API in ArcGIS Pro v 3.5.X. Feel free to continue exploring until we move to the next activity.","title":"ArcGIS Pro"},{"location":"desktop-gis/arcgis-pro/#use-the-stac-api-in-an-arcgis-pro-project","text":"Open ArcGIS Click map Give you New Project a name","title":"Use the STAC API in an ArcGIS Pro project."},{"location":"desktop-gis/arcgis-pro/#cloud-store","text":"A Cloud Store connection file is a method to crawl a cloud bucket/container like a regular folder. In some instances, these are required when connecting to STAC APIs. You can download a .ACS file from the AWS Explorer . To create your own, use the instructions below. In the Ribbon at the top, click on Insert, Connection, New Cloud Store Connection. Figure: Insert a New Cloud Storage Connection In the dialog create a name for the connection file, select AMAZON as the Service Provider, kyfromabove for the Bucket (Container) Name, and US WEST (Oregon) for the Region (Environment). For Provider options, add AWS_NO_SIGN_REQUEST with a value of yes.","title":"Cloud Store"},{"location":"desktop-gis/arcgis-pro/#stac-connection-file","text":"To get starting exploring the STAC API, the first item you need to make sure you have is a STAC Connection In ribbon at the top, click Insert Click on Connections With your mouse, hover over the STAC Connection Select, create new collection. This gives us the Create STAC Connection dialog box. Figure: Create a new New STAC Connection . Connection Name: KyFromAbove-STAC Connection: https://spved5ihrl.execute-api.us-west-2.amazonaws.com Optionally, add the Cloud Storage Connection we created earlier. You should now have a Catalog Pane that looks like this with your cloud storage and stac connections. Save your project. Also, on your own machines, you may right click on the either of the connections and choose to save to favorites and add to new projects.","title":"STAC Connection File"},{"location":"desktop-gis/arcgis-pro/#explore-the-stac","text":"In the map, zoom to and area of interest. For this example, I have zoomed to the area in western Kentucky south of Woodman in Pike County, Kentucky. Figure: Area of Interest, coal mine south of Woodman. *X* marks the spot.","title":"Explore the STAC"},{"location":"desktop-gis/arcgis-pro/#open-explore-stac-pane","text":"In the catalog pane, right click on the STAC Connection file we created in the above step, and click on the Explore STAC... . This will open a new pane. Feel free to move it around according to your preference. Figure: Explore STAC Panel. For this example, I will check the box for the dem-phase1. Then in the Extent option, I will choose Current Display Extent . This will modify the min and max xy values. Click on View Results at the bottom. Take a moment to explore the options on the Results tab for the Explore STAC pane. The ID:N126E433_2011_DEM_Phase1_cog.tif is known as the STAC Item ID. In the bottom of an Item's tab, click on the white icon in the middle of the three icons. This is the Properties Box. Take a minute to explore the Item properties. Figure: STAC Item Properties. 3. Click on the green icon to the left. This will drop a footprint onto your map. Very useful for knowing where the Item will draw on the map. 4. Finally, use the yellow add layer button to add to file to your map. Figure: Item card display in the results tab. You are now STREAMING a cloud-optimized geotiff straight from the cloud to your desktop application.","title":"Open Explore STAC Pane"},{"location":"desktop-gis/arcgis-pro/#add-multiple-footprints","text":"You can now explore the STAC even further. You may need to zoom in closer or farther away, adjust the extent and refresh the results. I'm going to add four footprint (like a square) over the mining area. Figure: Footprints added to a map in ArcGIS Pro.","title":"Add Multiple Footprints"},{"location":"desktop-gis/arcgis-pro/#add-a-mosaic","text":"Now check the boxes for the items you have as footprints in the map. The footprint icons subtely highlight. At the top of the pane, click on the add raster (blue/white) icon to choose from the menu. Select the Add as Mosaic Layer to Current Map . Figure: Four items selected and ready to be mosaicked and added to the map. It may take a few moments becauses Pro is pulling information from the cloud. Once that is complete, rendering will be much faster. For the record, I'm using tiles N126E443, N126E444, N127E443, amd N127E444. I now have four items seamlessly mosaicked in my map view. Explore the mosaic by zooming in and out. Figure: Four STAC items seamless mosaiced streaming Go ahead and right click the STAC mosaic layer and rename it by opening the properties dialog box. Call it DEM-Phase1 . (Don't forget to save the project occasionally). Let the fun begin. With the mosaic layer still selected in the Contents Panel, toggle open Imagery in the top ribbon. Search for Raster Functions and open. Type in the word Hillshade and click that icon. Figure: Raster Function Panel. Change Hillshade Type to Multidirectionl . Change Scaling to Adjusted . click Create New Layer With both mosaic layers turn on, select the newly created colorized Multidirection Hillshade raster in the contents pane. Click on Raster Layer tab in the top ribbon. Play with Transparency percentages. Play with Layer Blend option. Figure: Zoomed-in image of mine raster at 0% transparency and *Pin Light* used for blend mode. - Switch blend back to normal. Repeat the steps for the same Phase 3 DEM tiles. Once added to the map as a mosaic layer, rename raster to DEM-Phase3 . Toggle off any raster layers we added. Repeat steps to create another multidirectional hillshade raster.","title":"Add a Mosaic"},{"location":"desktop-gis/arcgis-pro/#analysis","text":"","title":"Analysis"},{"location":"desktop-gis/arcgis-pro/#change-detection","text":"For this section, we are going to perform a change detection analysis using the two mosaicked layers from different time periods. Like before, will used the mine South of Woodman, and just south of the Lower Elk Creek near North Hollow. X marks the spot. Figure: Coal mine south of Woodman, Kentucky. Click on the Imagery tab at the top, select the Change Detection icon and this will open the Change Detection Wizard pane.","title":"Change Detection"},{"location":"desktop-gis/arcgis-pro/#configure-the-wizard","text":"Change Detection Method - Pixel Value Change From Raster - DEM-Phase1 To Raster - DEM-Phase3 Statistics and Histogram Computation - use default values Figure: Change Detection Wizard Panel. Click Next > Leave the Band Difference with default values. Click Next > On the next Change Detection Wizard page, the tool tells us we need to calculate statistics. Click on the bar chart icon in the top right hand corner to do so. Figure: Classify Difference page for the change detection wizard. Click on the statistics graph icon in top right corner. Uncheck *Classify the difference in values. Click Next > to move to Output Generation . Leave values as default and click Preview at the bottom. You should see something like this. Figure: Image Preview using the Change Detection Wizard. Green indicates a negative change while red indicates a positive change. Back in the wizard panel, rename output to ChangeDetection.tif . Click Run The result will be a raster with a linear scale of our values with darker showing decreases and white showing increases. Take a moment to play around with Raster Layer -> Layer Blend values.","title":"Configure the wizard"},{"location":"desktop-gis/arcgis-pro/#output","text":"You should see something like this. Figure: Tiff output of Change Detection Wizard with 0% transparency and layer blend set to Vivid Light . This concludes the activity of playing around with a STAC API in ArcGIS Pro v 3.5.X. Feel free to continue exploring until we move to the next activity.","title":"Output"},{"location":"desktop-gis/qgis/","text":"Using STAC API with QGIS Minimum Requirements: QGIS 3.0.0, recommended >= QGIS 3.38.X *Note: Due to workshop locale restraints, it is not possible to perform this exercise. Below is just primer I am providing for anyone who wants to use this open Github Page or for you to continue working on your own time/machines. I like to make sure my Browser in QGIS has a view items set up. Figure: QGIS Browser Panel - I like to make sure my QGIS has REST Services, STAC connections, and local directories already set to go. Browser Panel Add relevant directories (e.g., Downloads, Documents, etc) Add STAC Connections Name kyfromabove API URL https://spved5ihrl.execute-api.us-west-2.amazonaws.com/ REST Servers kyraster https://kyraster.ky.gov/arcgis/rest/services/ kygisserver https://kygisserver.ky.gov/arcgis/rest/services/WGS84WM_Services/ Toggle open kygisserver under ArcGIS REST Servers, scroll towards the bottom and look for Ky_TCM_Base_WGS84WM . Toggle open, right click on layers, add to map. Optionally, in the Layers panel, right click and save as a layerfile locally to use in future projects. Figure: REST Services connections setup in the Browser panel in QGIS. Plugins and Connections Lat Lon Tools - quickly capture extent coordinates STAC API Browser Set up STAC Connections In Browser panel, right click STAC Add Connection Figure: STAC Connection dialog box. Connection Name - kyfromabove URL - https://spved5ihrl.execute-api.us-west-2.amazonaws.com/ At this point you have all the relavent connections, services, and layers. Figure: Minimum connections and layers for QGIS project. Add STAC Data Zoom to a location of interest on the map. Eventually, you may need to zoom in or out to get an appropriate query result from the API Browser. I have randomly zoomed to an airport in Martin County (easter Kentucky). FYI, using the Lat Lon Tools I quickly grabbed my extent. -83.44882668,37.26136889,-82.05662517,38.27153324 STAC Browser API Plugin Make sure the kyfromabove connection is selected. Click Fetch Collections. Click on the Digital Elevation Model Phase 3 so that it is selected For extent, click Map Canvas Extent Scroll down, click search Depending on your internet connection, the seach query should be quick (seconds). Figure: Search results for an area of interest using the map view extent with the STAC Browser plugin. I like to add all assets footprints, provided the results are 10 or less. This way, I can see which IDs in the search results match up to the footprints in the map. In the STAC Browser window: click on an asset you want to use Check add layer to the map . Click Add selected asset as a layer Repeat this for your area of interest. I have using 6 assets, making a 3x2 grid. N111E408-410 and N112E408-410. Any more than this, I would recommend using the python terminal in qqis to search the API to add layers. Now what? We don't want to analyze the tiles individually, but as a group. Solution. Build a virtual raster. In the processing toolbox, type Build Virtual Raster Double Click the tool under GDAL For input layers, click on 3 dots Select the six layers we added Click the back arrow at top left If no other changes needed, click run Figure: Virtual Raster built from six STAC Item assets added to the map. The benefit of mosaic this way is that you avoid the need to download individual tiles. You create a virtual raster from streaming COGs, and export virtual raster locally. Play around with different processing tools. For some, like the Whitebox Geotools Plugin, you will need to export your virtual raster to a local directory.","title":"QGIS"},{"location":"desktop-gis/qgis/#using-stac-api-with-qgis","text":"Minimum Requirements: QGIS 3.0.0, recommended >= QGIS 3.38.X *Note: Due to workshop locale restraints, it is not possible to perform this exercise. Below is just primer I am providing for anyone who wants to use this open Github Page or for you to continue working on your own time/machines. I like to make sure my Browser in QGIS has a view items set up. Figure: QGIS Browser Panel - I like to make sure my QGIS has REST Services, STAC connections, and local directories already set to go.","title":"Using STAC API with QGIS"},{"location":"desktop-gis/qgis/#browser-panel","text":"Add relevant directories (e.g., Downloads, Documents, etc) Add STAC Connections Name kyfromabove API URL https://spved5ihrl.execute-api.us-west-2.amazonaws.com/ REST Servers kyraster https://kyraster.ky.gov/arcgis/rest/services/ kygisserver https://kygisserver.ky.gov/arcgis/rest/services/WGS84WM_Services/ Toggle open kygisserver under ArcGIS REST Servers, scroll towards the bottom and look for Ky_TCM_Base_WGS84WM . Toggle open, right click on layers, add to map. Optionally, in the Layers panel, right click and save as a layerfile locally to use in future projects. Figure: REST Services connections setup in the Browser panel in QGIS.","title":"Browser Panel"},{"location":"desktop-gis/qgis/#plugins-and-connections","text":"Lat Lon Tools - quickly capture extent coordinates STAC API Browser Set up STAC Connections In Browser panel, right click STAC Add Connection Figure: STAC Connection dialog box. Connection Name - kyfromabove URL - https://spved5ihrl.execute-api.us-west-2.amazonaws.com/ At this point you have all the relavent connections, services, and layers. Figure: Minimum connections and layers for QGIS project.","title":"Plugins and Connections"},{"location":"desktop-gis/qgis/#add-stac-data","text":"Zoom to a location of interest on the map. Eventually, you may need to zoom in or out to get an appropriate query result from the API Browser. I have randomly zoomed to an airport in Martin County (easter Kentucky). FYI, using the Lat Lon Tools I quickly grabbed my extent. -83.44882668,37.26136889,-82.05662517,38.27153324 STAC Browser API Plugin Make sure the kyfromabove connection is selected. Click Fetch Collections. Click on the Digital Elevation Model Phase 3 so that it is selected For extent, click Map Canvas Extent Scroll down, click search Depending on your internet connection, the seach query should be quick (seconds). Figure: Search results for an area of interest using the map view extent with the STAC Browser plugin. I like to add all assets footprints, provided the results are 10 or less. This way, I can see which IDs in the search results match up to the footprints in the map. In the STAC Browser window: click on an asset you want to use Check add layer to the map . Click Add selected asset as a layer Repeat this for your area of interest. I have using 6 assets, making a 3x2 grid. N111E408-410 and N112E408-410. Any more than this, I would recommend using the python terminal in qqis to search the API to add layers. Now what? We don't want to analyze the tiles individually, but as a group. Solution. Build a virtual raster. In the processing toolbox, type Build Virtual Raster Double Click the tool under GDAL For input layers, click on 3 dots Select the six layers we added Click the back arrow at top left If no other changes needed, click run Figure: Virtual Raster built from six STAC Item assets added to the map. The benefit of mosaic this way is that you avoid the need to download individual tiles. You create a virtual raster from streaming COGs, and export virtual raster locally. Play around with different processing tools. For some, like the Whitebox Geotools Plugin, you will need to export your virtual raster to a local directory.","title":"Add STAC Data"},{"location":"environment/","text":"Getting Started For this exercise, you will need to choose a platform for which you can run a python notebook. Examples include but are not limited to: MyBinder Google Colab - Easy Setup SageMaker Studio Lab - Must already have an account - takes time to get approved Local Jupyter - recommended only for experienced python users using a conda/mamba environment using a virtual environment with pip (e.g., python -m venv myenv + pip install jupyter) For for the purposes of the workshop, I recomment most users use MyBinder . When launched, if will build the environment we need to get started. Fork the repo This part is optional and is only recommended for experieced Github users. Sign into GitHub From your Github Dashboard, use the search bar at the top. Copy and paste the following in the search bar: repo:ianhorn/kyfromabove-gisconference2025-workshop Once you are on this page, click on Fork in the top right corner to for this repo. You can use my repository name or you can edit to your own. Now that you have your own fork you can cmd/terminal to download to get started. git clone https://github.com/ianhorn/kyfromabove-gisconference2025-workshop.git kyfromabove-workshop cd kyfromabove-workshop Now set up your environment with pip python -m venv venv venv/Scripts/activate.bat pip install -r requirements.txt or conda conda init conda env create -f environment.yml conda activate workshop-env Local Setup Fork the repo Setup python environoment Conda conda init conda env create -f environment.yml conda activate workshop-env Virtual Environment Windows python -m venv venv venv\\Scripts\\activate.bat python -m pip install -r requiements.txt mac/linux python -m venv venv source venv/bin/activate python -m pip install -r requiements.txt","title":"Setup"},{"location":"environment/#getting-started","text":"For this exercise, you will need to choose a platform for which you can run a python notebook. Examples include but are not limited to: MyBinder Google Colab - Easy Setup SageMaker Studio Lab - Must already have an account - takes time to get approved Local Jupyter - recommended only for experienced python users using a conda/mamba environment using a virtual environment with pip (e.g., python -m venv myenv + pip install jupyter) For for the purposes of the workshop, I recomment most users use MyBinder . When launched, if will build the environment we need to get started.","title":"Getting Started"},{"location":"environment/#fork-the-repo","text":"This part is optional and is only recommended for experieced Github users. Sign into GitHub From your Github Dashboard, use the search bar at the top. Copy and paste the following in the search bar: repo:ianhorn/kyfromabove-gisconference2025-workshop Once you are on this page, click on Fork in the top right corner to for this repo. You can use my repository name or you can edit to your own. Now that you have your own fork you can cmd/terminal to download to get started. git clone https://github.com/ianhorn/kyfromabove-gisconference2025-workshop.git kyfromabove-workshop cd kyfromabove-workshop Now set up your environment with pip python -m venv venv venv/Scripts/activate.bat pip install -r requirements.txt or conda conda init conda env create -f environment.yml conda activate workshop-env","title":"Fork the repo"},{"location":"environment/#local-setup","text":"Fork the repo Setup python environoment Conda conda init conda env create -f environment.yml conda activate workshop-env Virtual Environment Windows python -m venv venv venv\\Scripts\\activate.bat python -m pip install -r requiements.txt mac/linux python -m venv venv source venv/bin/activate python -m pip install -r requiements.txt","title":"Local Setup"},{"location":"environment/mybinder/","text":"Using Binder Binder allows us to use an already created environment notebook from a (Github) repository. On the MyBinder landing page , you will see an interactive block for which to launch the repo with its python environment set up for us. Grab your forked repo URL. Or use mine: https://github.com/ianhorn/kyfromabove-gisconference2025-workshop Leave the Git ref as head and Files to open blank. Then click launch MyBinder will use the environment.yml file to build a python environment so you can hit the ground running when the notebooks starts up. You can show the Build Logs to monitor process.","title":"MyBinder"},{"location":"environment/mybinder/#using-binder","text":"Binder allows us to use an already created environment notebook from a (Github) repository. On the MyBinder landing page , you will see an interactive block for which to launch the repo with its python environment set up for us. Grab your forked repo URL. Or use mine: https://github.com/ianhorn/kyfromabove-gisconference2025-workshop Leave the Git ref as head and Files to open blank. Then click launch MyBinder will use the environment.yml file to build a python environment so you can hit the ground running when the notebooks starts up. You can show the Build Logs to monitor process.","title":"Using Binder"},{"location":"python/","text":"Python Extract Building Heights Launch the notebook Figure: Extruded Buildings from notebook output. Commandline","title":"Exercises"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#extract-building-heights","text":"Launch the notebook Figure: Extruded Buildings from notebook output.","title":"Extract Building Heights"},{"location":"python/#commandline","text":"","title":"Commandline"},{"location":"resources/","text":"Resources KyGISServer https://kygisserver.ky.gov/arcgis/rest/services/WGS84WM_Services kygisserver is DGI's public-facing vector-based GIS server. The above URL is the REST Endpoint Service. These services can be connected to many GIS softwares such as QGIS and ArcGIS Pro. The services may also be leveraged according the the API Documentation . Open Data Portal https://opengisdata.ky.gov/ The KyGovMaps Open Data Portal is another great resource for vector data sources. This is also the place you want to visit for Metadata . It will be the only source for metadata once KyGeoPortal retires in October 2025. KyRaster https://kyraster.ky.gov/arcgis/ kyraster is GIS Server that hosts the Commonwealth imagery and elevation data. The above REST Service Endpoint URL functions the same way as kygisserver . Documention on how to use is in the KyRaster API Documentation From the service endpoint, data services reside in the Imagery and Elevation folders. KyFromAbove on AWS Explorer https://kyfromabove.s3.us-west-2.amazonaws.com/index.html This is javascript-based Explorer serves the kyfromabove aws bucket as an explorer-like environment. This is a great resource to download files if you already know the name of the file. Also, it also contains links to tile grids in Geopackage formats that can be view in desktop software, python, online viewers, and so on. Figure: A explore like way to search for KyFromAbove files on AWS. Open Data Registry on AWS https://registry.opendata.aws/kyfromabove/ KyFromAbove's landing page in the AWS Open Data Registry . This page contains descriptions for KyFromAbove products, code snippets to get you started search the bucket with AWSCLI Command Line Interface, links to tools, publications, endpoints, etc. Figure Resouce description on the KyFromAbove landing page on the [AWS Open Data Registry](https://registry.opendata.aws/kyfromabove/).","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#kygisserver","text":"https://kygisserver.ky.gov/arcgis/rest/services/WGS84WM_Services kygisserver is DGI's public-facing vector-based GIS server. The above URL is the REST Endpoint Service. These services can be connected to many GIS softwares such as QGIS and ArcGIS Pro. The services may also be leveraged according the the API Documentation .","title":"KyGISServer"},{"location":"resources/#open-data-portal","text":"https://opengisdata.ky.gov/ The KyGovMaps Open Data Portal is another great resource for vector data sources. This is also the place you want to visit for Metadata . It will be the only source for metadata once KyGeoPortal retires in October 2025.","title":"Open Data Portal"},{"location":"resources/#kyraster","text":"https://kyraster.ky.gov/arcgis/ kyraster is GIS Server that hosts the Commonwealth imagery and elevation data. The above REST Service Endpoint URL functions the same way as kygisserver . Documention on how to use is in the KyRaster API Documentation From the service endpoint, data services reside in the Imagery and Elevation folders.","title":"KyRaster"},{"location":"resources/#kyfromabove-on-aws-explorer","text":"https://kyfromabove.s3.us-west-2.amazonaws.com/index.html This is javascript-based Explorer serves the kyfromabove aws bucket as an explorer-like environment. This is a great resource to download files if you already know the name of the file. Also, it also contains links to tile grids in Geopackage formats that can be view in desktop software, python, online viewers, and so on. Figure: A explore like way to search for KyFromAbove files on AWS.","title":"KyFromAbove on AWS Explorer"},{"location":"resources/#open-data-registry-on-aws","text":"https://registry.opendata.aws/kyfromabove/ KyFromAbove's landing page in the AWS Open Data Registry . This page contains descriptions for KyFromAbove products, code snippets to get you started search the bucket with AWSCLI Command Line Interface, links to tools, publications, endpoints, etc. Figure Resouce description on the KyFromAbove landing page on the [AWS Open Data Registry](https://registry.opendata.aws/kyfromabove/).","title":"Open Data Registry on AWS"},{"location":"stac/stac/","text":"STAC Why STAC? Because it's FAIR ! Here are some highlights from the STAC Spec landing page. When a user wants to search for all the imagery in their area and time of interest they can\u2019t make just one search\u200a\u2014\u200athey have to use different tools and connect to API\u2019s that are similar but all slightly different. STAC aims to make that much easier, by providing common metadata to expose geospatial assets. Space, and Time? And no, we aren't talking about General Relativity. Figure: Datacube rendering to visualized data collection over time. Taken from Brazil Data Cube . This makes more sense for more frequently collected data (e.g., satellite). Yes, you can simultaneously query by geography and dates for an area of interest. But How? Because STAC is a way to serve earth observation data via its metadata. STAC aims to make that much easier, by providing common metadata to expose geospatial assets. What makes a STAC? In short, it's indexing data by its time and space attributes. The basic components of a STAC are the following: Item data + metadata file location date collected relevant links thumbnails world files viewers Figure: Graphic borrowed from the STAC Spec . Catalog structure or heirarchy groups of child catalogs list of stac items Figure: Graphic borrowed from the STAC Spec . Collection extension of a catalog more metadata date ranges equipment providers more metadata Figure: Graphic borrowed from the STAC Spec . 4. STAC API - enables the search component - data(base) backend - Postgres, Opensearch, etc. - serverless architecture - Lambda, Geoparquet, etc. - [OpenAPI specification](https://swagger.io/specification/) - Open Geospatial Consortium [(OGC) WFS3](https://ubuntu.qgis.org/qgisdata/QGIS-Documentation/live/html/en/docs/server_manual/services/ogcapif.html) TL;DR The STAC Specification is the common structure that describes and catalogs spatiotemporal Assets. It is indexing spatiotemporal data Leverages metadata Items are the basic atomic unit Catalogs provide structure Collections are an extension of the catalog that help describe the data or subset of data in a similar manner.","title":"STAC"},{"location":"stac/stac/#stac","text":"","title":"STAC"},{"location":"stac/stac/#why-stac","text":"Because it's FAIR ! Here are some highlights from the STAC Spec landing page. When a user wants to search for all the imagery in their area and time of interest they can\u2019t make just one search\u200a\u2014\u200athey have to use different tools and connect to API\u2019s that are similar but all slightly different. STAC aims to make that much easier, by providing common metadata to expose geospatial assets. Space, and Time? And no, we aren't talking about General Relativity. Figure: Datacube rendering to visualized data collection over time. Taken from Brazil Data Cube . This makes more sense for more frequently collected data (e.g., satellite). Yes, you can simultaneously query by geography and dates for an area of interest. But How? Because STAC is a way to serve earth observation data via its metadata. STAC aims to make that much easier, by providing common metadata to expose geospatial assets.","title":"Why STAC?"},{"location":"stac/stac/#what-makes-a-stac","text":"In short, it's indexing data by its time and space attributes. The basic components of a STAC are the following: Item data + metadata file location date collected relevant links thumbnails world files viewers Figure: Graphic borrowed from the STAC Spec . Catalog structure or heirarchy groups of child catalogs list of stac items Figure: Graphic borrowed from the STAC Spec . Collection extension of a catalog more metadata date ranges equipment providers more metadata Figure: Graphic borrowed from the STAC Spec . 4. STAC API - enables the search component - data(base) backend - Postgres, Opensearch, etc. - serverless architecture - Lambda, Geoparquet, etc. - [OpenAPI specification](https://swagger.io/specification/) - Open Geospatial Consortium [(OGC) WFS3](https://ubuntu.qgis.org/qgisdata/QGIS-Documentation/live/html/en/docs/server_manual/services/ogcapif.html)","title":"What makes a STAC?"},{"location":"stac/stac/#tldr","text":"The STAC Specification is the common structure that describes and catalogs spatiotemporal Assets. It is indexing spatiotemporal data Leverages metadata Items are the basic atomic unit Catalogs provide structure Collections are an extension of the catalog that help describe the data or subset of data in a similar manner.","title":"TL;DR"},{"location":"stac/stac-browser/","text":"Stac-Browser Landing Page Finally, what we really want to see. It converts what looks like an JSON file into a user friendly experience. Please open a browser and go to the KyFromAbove Stac-Browser Landing Page : https://kygeonet.ky.gov/stac Button Functions Let's take a look at the top right hand corner by clicking on each button to see what they show. Button Display API Conformance Classes \u2013 API compliances Source ID, Version, Validity, Metadata File Share Share the URL or to social media Language Switch Languages On the left we have the browse and search buttons. Button Function Browse Opens a side tab to toggle between collections Search Perform a search at the collection or item level (2 tabs) Additional Resources Term Description OpenAPI service description JSON file describing the API endpoint OpenAPI service documentation API exploration, playground, tool Explore","title":"Stac-Browser"},{"location":"stac/stac-browser/#stac-browser","text":"","title":"Stac-Browser"},{"location":"stac/stac-browser/#landing-page","text":"Finally, what we really want to see. It converts what looks like an JSON file into a user friendly experience. Please open a browser and go to the KyFromAbove Stac-Browser Landing Page : https://kygeonet.ky.gov/stac","title":"Landing Page"},{"location":"stac/stac-browser/#button-functions","text":"Let's take a look at the top right hand corner by clicking on each button to see what they show. Button Display API Conformance Classes \u2013 API compliances Source ID, Version, Validity, Metadata File Share Share the URL or to social media Language Switch Languages On the left we have the browse and search buttons. Button Function Browse Opens a side tab to toggle between collections Search Perform a search at the collection or item level (2 tabs)","title":"Button Functions"},{"location":"stac/stac-browser/#additional-resources","text":"Term Description OpenAPI service description JSON file describing the API endpoint OpenAPI service documentation API exploration, playground, tool Explore","title":"Additional Resources"}]}